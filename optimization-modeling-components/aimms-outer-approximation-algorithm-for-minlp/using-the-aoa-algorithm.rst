.. _sec:aoa.using.algorithm:

Using the AOA Algorithm
=======================

.. rubric:: AOA module :math:`\ldots`

The basis GMP implementation of the AIMMS Outer Approximation (AOA)
algorithm can be found in a single AIMMS module, called
``GMP Outer Approximation``, that is provided as part of the AIMMS
system. You can install this module using the **Install System Module**
command in the AIMMS **Settings** menu.

.. rubric:: Basic algorithm

The procedure ``DoOuterApproximation`` inside the module implements the
basic algorithm from the previous section. The procedure
``DoOuterApproximation`` has one input argument, namely:

-  ``MyGMP``, an element parameter with range
   :any:`AllGeneratedMathematicalPrograms`.

This procedure is called as follows:

.. code-block:: aimms

	generatedMP := GMP::Instance::Generate( SymbolicMP );

	GMPOuterApprox::DoOuterApproximation( generatedMP );

Here ``SymbolicMP`` is the symbolic mathematical program containing the
MINLP model, and ``generatedMP`` is an element parameter in the
predefined set :any:`AllGeneratedMathematicalPrograms`. ``GMPOuterApprox``
is the prefix of the AOA module. The implementation of this procedure
will be discussed in :ref:`sec:aoa.impl`.

.. rubric:: Modifying the algorithm

Because the AIMMS Outer Approximation algorithm is completely
implemented using functionality provided the GMP library, you have the
complete freedom to modify the math program instances generated by the
basic AOA algorithm using the matrix manipulation routines discussed in
:ref:`sec:gmp.matrix`. Such problem-specific modifications to the basic
algorithm may help you to find a better overall solution to your MINLP
model, or to find a good solution faster.