.. _sec:net.arc:

``Arc`` Declaration and Attributes
==================================

.. _arc:

.. rubric:: Arc attributes

Arcs are used to represent the possible flows between nodes in a
network. From these flows, balancing constraints can be generated by
AIMMS for every node in the network. The possible attributes of an arc
are given in :numref:`table:net.attr-arc`.

.. _table:net.attr-arc:

.. table:: 

	+--------------------+--------------------------------------------------+------------------------------------------------------------------------------+
	| Attribute          | Value-type                                       | See also page                                                                |
	+====================+==================================================+==============================================================================+
	| ``IndexDomain``    | *index-domain*                                   | :ref:`attr:par.index-domain`                                                 |
	+--------------------+--------------------------------------------------+------------------------------------------------------------------------------+
	| ``Range``          | *range*                                          | :ref:`attr:var.range`                                                        |
	+--------------------+--------------------------------------------------+------------------------------------------------------------------------------+
	| ``Default``        | *constant-expression*                            | :ref:`attr:par.default`, :ref:`attr:var.default`                             |
	+--------------------+--------------------------------------------------+------------------------------------------------------------------------------+
	| ``From``           | *node-reference*                                 |                                                                              |
	+--------------------+--------------------------------------------------+------------------------------------------------------------------------------+
	| ``FromMultiplier`` | *expression*                                     |                                                                              |
	+--------------------+--------------------------------------------------+------------------------------------------------------------------------------+
	| ``To``             | *node-reference*                                 |                                                                              |
	+--------------------+--------------------------------------------------+------------------------------------------------------------------------------+
	| ``ToMultiplier``   | *expression*                                     |                                                                              |
	+--------------------+--------------------------------------------------+------------------------------------------------------------------------------+
	| ``Cost``           | *expression*                                     |                                                                              |
	+--------------------+--------------------------------------------------+------------------------------------------------------------------------------+
	| ``Unit``           | *unit-valued expression*                         | :ref:`attr:var.unit`                                                         |
	+--------------------+--------------------------------------------------+------------------------------------------------------------------------------+
	| ``Priority``       | *expression*                                     | :ref:`attr:var.priority`                                                     |
	+--------------------+--------------------------------------------------+------------------------------------------------------------------------------+
	| ``NonvarStatus``   | *expression*                                     | :ref:`attr:var.nonvar`                                                       |
	+--------------------+--------------------------------------------------+------------------------------------------------------------------------------+
	| ``RelaxStatus``    | *expression*                                     | :ref:`attr:var.relax`                                                        |
	+--------------------+--------------------------------------------------+------------------------------------------------------------------------------+
	| ``Property``       | ``NoSave``, *numeric-storage-property*,          | :ref:`attr:set.property`, :ref:`attr:par.property`, :ref:`attr:var.property` |
	+--------------------+--------------------------------------------------+------------------------------------------------------------------------------+
	|                    | ``Inline``, ``SemiContinuous``, ``ReducedCost``, |                                                                              |
	+--------------------+--------------------------------------------------+------------------------------------------------------------------------------+
	|                    | ``ValueRange``, ``CoefficientRange``             |                                                                              |
	+--------------------+--------------------------------------------------+------------------------------------------------------------------------------+
	| ``Text``           | *string*                                         | :ref:`attr:prelim.text`, :ref:`attr:par.text`                                |
	+--------------------+--------------------------------------------------+------------------------------------------------------------------------------+
	| ``Comment``        | *comment string*                                 | :ref:`attr:prelim.comment`                                                   |
	+--------------------+--------------------------------------------------+------------------------------------------------------------------------------+
	
.. _arc.index_domain:

.. _arc.range:

.. _arc.default:

.. _arc.unit:

.. _arc.priority:

.. _arc.nonvar_status:

.. _arc.relax_status:

.. _arc.property:

.. rubric:: Arcs are like variables

Arcs play the role of variables in a network problem, but have some
extra attributes compared to ordinary variables, namely the ``From``,
``To``, ``FromMultiplier``, ``ToMultiplier``, and ``Cost`` attributes.
Arcs do not have a ``Definition`` attribute because they are implicitly
defined by the ``From`` and ``To`` attributes.

.. _attr:net.arc.to:

.. rubric:: The ``From`` and ``To`` attributes
   :name: attr:net.arc.from

.. _arc.from:

.. _arc.to:

For each arc, the ``From`` attribute is used to specify the starting
node, and the ``To`` attribute to specify the end node. The value of
both attributes must be a reference to a declared node.

.. rubric:: The ``Multiplier`` attributes
   :name: attr:net.arc.multiplier

.. _arc.from_multiplier:

.. _arc.to_multiplier:

With the ``FromMultiplier`` and ``ToMultiplier`` attributes you can
specify whether the flow along an arc has a gain or loss factor. Their
value must be an expression defined over some or all of the indices of
the index domain of the arc. The result of the expression must be
positive. If you do not specify a ``Multiplier`` attribute, AIMMS
assumes a default of one. Network problems with non unit-valued
``Multiplier``\ s are called *generalized networks*.

.. rubric:: ``FromMultiplier`` and ``ToMultiplier``

The ``FromMultiplier`` is the conversion factor of the flow at the
source node, while the ``ToMultiplier`` is the conversion factor at the
destination node. Having both multipliers offers you the freedom to
specify the network in its most natural way.

.. rubric:: The ``Cost`` attribute
   :name: attr:net.arc.cost

.. _arc.cost:

You can use the ``Cost`` attribute to specify the cost associated with
the transport of one unit of flow across the arc. Its value is used in
the computation of the special variable ``FlowCost``, which is the
accumulated cost over all arcs. In the computation of the ``FlowCost``
variable the component of an arc is computed as the product of the unit
cost and the level value of the flow.

.. rubric:: Graphically illustrated

In the presence of ``FromMultiplier`` and ``ToMultipliers``, the drawing
in :numref:`fig:net.flow` illustrates

-  the level value of the flow,

-  its associated cost component in the predefined ``FlowCost``
   variable, and

-  the flows as they enter into the flow balances at the source and
   destination nodes (denoted by SBF and DBF, respectively).

.. figure:: arc-declaration-and-attributes-pspic1.svg
   :name: fig:net.flow

   Flow levels and cost from node :math:`i` to node :math:`j`

.. rubric:: Semi-continuous arcs

You can only use the ``SemiContinuous`` property for arcs if you use an
LP solver to find the solution. If you use the pure network solver
integrated in AIMMS, AIMMS will issue an error message.

.. rubric:: Example

Using the declaration of nodes from the previous section, an example of
a valid arc declaration is given by

.. code-block:: aimms

	Arc Transport {
	    IndexDomain  :  (i,j,p) | Distance(i,j);
	    Range        :  nonnegative;
	    From         :  DepotStockSupplyNode(i,p);
	    To           :  CustomerDemandNode(j,p);
	    Cost         :  UnitTransportCost(i,j);
	}

Note that this arc declaration declares flows between nodes ``i`` and
``j`` for multiple products ``p``.